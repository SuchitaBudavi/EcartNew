<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/webflow-config
    	http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd
    	http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

<context:component-scan base-package="com.ecart.controller"/>      
<mvc:annotation-driven/>     
<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>
<tx:annotation-driven transaction-manager="txManager"/><!-- a PlatformTransactionManager is still required -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- (this dependency is defined somewhere else) -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/Views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
</bean>
<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>
<security:global-method-security secured-annotations="enabled"/>

<bean id="dataSource"
  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName" value="org.h2.Driver" />
  <property name="url" value="jdbc:h2:tcp://localhost/~/test" />
  <property name="username" value="sa" />
  <property name="password" value="" />
</bean>


<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
			<list>
				<value>com.ecart.model.User</value>
				<value>com.ecart.model.Product</value>
				<value>com.ecart.model.Category</value>
				<value>com.ecart.model.Supplier</value>
				<value>com.ecart.model.MultiSupplier</value>
				<value>com.ecart.model.MobileFeature</value>
				<value>com.ecart.model.MobileCoverFeature</value>
				<value>com.ecart.model.CartDetails</value>
			</list>
		</property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
</bean>



<bean class="com.ecart.model.GuestCartDetails" scope="sesssion"/>
<!-- <bean class="com.ecart.model.User" scope="singleton"/> -->
<bean class="com.ecart.dao.CategoryDaoImpl" name="categoryDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.ProductDaoImpl" name="productDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"/>
</bean>
<bean class="com.ecart.dao.SupplierDaoImpl" name="supplierDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.UserDaoImpl" name="userDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.CartDetailsDaoImpl" name="cartDetailsDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.MobileCoverFeatureDaoImpl" name="mobileCoverFeatureDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.MobileFeatureDaoImpl" name="mobileFeatureDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>
<bean class="com.ecart.dao.MultiSupplierDaoImpl" name="multiSupplierDao">
<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
</bean>

<bean class="com.ecart.model.User" name="user" scope="singleton"/>
<bean class="com.ecart.model.GuestCartDetails" name="guestCartDetails"/>
<bean class="com.ecart.model.CartDetails" name="cartDetails" scope="singleton"/>

</beans>